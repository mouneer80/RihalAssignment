@page "/classesList"

@using RihalAssignment.Models
@inject RihalAssignmentBlazorUI.Web.Services.IClassService _classService
@inject MudBlazor.ISnackbar snackBar


<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add / Edit Classes</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudHidden @bind-Value="_classId"></MudHidden>
        <MudTextField @bind-Value="_className" Label="Class Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Class</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Clear">Rest all fields</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Elevation="25" Items="classes" Filter="new Func<Class, bool>(Search)" @bind-customer="_class">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Classes</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search for Classes..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Class Name</MudTh>
        <MudTh>Created on</MudTh>
        <MudTh>Modified on</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Class Name">@context.Name</MudTd>
        <MudTd DataLabel="Created on">@context.CreatedDate.ToShortDateString()</MudTd>
        <MudTd DataLabel="Modified on">@context.ModifiedDate.ToShortDateString()</MudTd>
        <MudTd DataLabel="">
            <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 5,10,20,50}" />
    </PagerContent>
</MudTable>

@code{
    private string searchString = "";

    private Class _class = new();
    private List<Class> classes = new();

    int _classId = 0;
    string _className = "";

    protected override async Task OnInitializedAsync()
    {
        await GetAllClasses();
    }

    private async Task<List<Class>> GetAllClasses()
    {
        return classes = (await _classService.GetClasses()).ToList();
    }

    private bool Search(Class _class)
    {
        if (_class.Name is not null && _class.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }

    private async void Save()
    {
        if (_class.Id == 0)
            await _classService.AddClass(_class);
        else
            await _classService.UpdateClass(_class.Id, _class);

        await GetAllClasses();
        this.StateHasChanged();
        snackBar.Add("Class record saved", Severity.Success);
    }
    private void Edit(int id)
    {
        _class = classes.FirstOrDefault(c => c.Id == id);
        _classId = _class.Id;
        _className = _class.Name;
    }
    private void Clear()
    {
        _classId = 0;
        _className = "";
    }
}